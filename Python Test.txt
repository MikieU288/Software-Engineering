#(1) 2.1.1.19
print("   *\n  * *\n *   *\n*     *\n*** ***\n *   *\n *   *\n *****")
#or
print('   *','  * *',' *   *','*     *','*** ***',' *   *',' *   *',' *****', sep='\n')

#(2)
print("   *")

print("  * *")

print(" *   *")

print("*     *")

print("*** ***")

print(" *   *")

print(" *   *")

print(" *   *")

print(" *   *")

print(" *   *")

print(" *   *")

print(" *   *")

print(" *   *")

print(" *   *")

print(" *   *")

print(" *****")

#(3)
print("   *    " * 2)

print("  * *   " * 2)

print(" *   *  " * 2)

print("*     * " * 2)

print("*** *** " * 2)

print(" *   *  " * 2)

print(" *   *  " * 2)

print(" *****  " * 2)

#(4)
#This shows errors with a " removed
#print(" *")
#
#print(" * *")
#
#print(" * *")
#
#print( * *")
#
#print("*** ***")
#
#print(" * *")
#
#print(" * *")
#
#print(" *****")

#(5)
#This shows errors with a ( removed
#print(" *")
#
#print(" * *")
#
#print(" * *")
#
#print(" * *")
#
#print"*** ***")
#
#print(" * *")
#
#print(" * *")
#
#print(" *****")

#(6)
#This shows errors with a Print instead of print
#print(" *")
#
#print(" * *")
#
#print(" * *")
#
#print(" * *")
#
#Print("*** ***")
#
#print(" * *")
#
#print(" * *")
#
#print(" *****")

#(7)
#This shows a combination of ' an "
print("   *")

print('  * *')

print(" *   *")

print('*     *')

print("*** ***")

print(' *   *')

print(" *   *")

print(' *****')

#(8) 2.2.1.11
print('"I\'m"')

print('""learning""')

print('"""Python"""')

#or

print('"I\'m"\n""learning""\n"""Python"""')

#(9) 2.4.1.7
john = 3

mary = 5

adam = 6

#john has 3 apples, mary has 5 apples and adam has 6 apples

print(john, mary, adam, sep=', ')

#seperates each owners apple allocation with a comma

total_apples = john + mary + adam

#adds together each persons apples

print(total_apples)

#displays total amount of apples

average_apples = (john + mary + adam) / 3

#avereges the apples with a float or // 3 for a whole number (rounded down)

print(average_apples)

print("Total number of apples", total_apples, sep=' = ')

#(10) 2.4.1.9
kilometers = 12.25

miles = 7.38

miles_to_kilometers = miles * 1.61

kilometers_to_miles = kilometers / 1.61

print(miles, "miles is", round(miles_to_kilometers, 2), "kilometers")

print(kilometers, "kilometers is", round(kilometers_to_miles, 2), "miles")

#and

kilometers = 12.25

miles = 7.38

miles_to_kilometers = miles * 1.61

kilometers_to_miles = kilometers / 1.61

miles_to_furlongs = miles / 4

kilometers_to_furlongs = (kilometers / 1.61) / 4

print(miles, "miles is", round(miles_to_kilometers, 2), "kilometers", "and", round(miles_to_furlongs, 2), "furlongs")

print(kilometers, "kilometers is", round(kilometers_to_miles, 2), "miles", "and", round(kilometers_to_furlongs, 2), "furlongs")

#(11) 2.4.1.10
x = 0

x = float(x)

y = 3*(x**3) - 2*(x**2) + 3*x - 1

#3x3 - 2x2 + 3x - 1

print("y =", y)

x = 1

x = float(x)

y = 3*(x**3) - 2*(x**2) + 3*x - 1

print("y =", y)

x = -1

x = float(x)

y = 3*(x**3) - 2*(x**2) + 3*x - 1

print("y =", y)

#12 2.6.1.9

val1 = float (input ("enter a number: ")) #input first variable
val2 = float (input ("enter a number: ")) #input second variable
#int = a whole number and float = with decimals
#Define the variables
addition = val1 + val2
subtraction = val1 - val2
multiplication = val1 * val2
division = val1 / val2
exponent = val1 ** val2
floor = val1 // val2

#Print sums
print (val1, "+", val2, "=", addition)
print (val1, "-", val2, "=", subtraction)
print (val1, "X", val2, "=", multiplication)
print (val1, "divided by", val2, "=", division)
print (val1, "to the power of", val2, "=", exponent)
print (val1, "divided by - floor division", val2, "=", floor)
print ("\nThats all, folks!")#\n prints the string on a new line

#13 2.6.1.10
x = float(input("Enter value for x: "))

y = 1. /(x + 1. / (x + 1. / (x + 1/x)))
#1. ensures decimals,also / followed by a (
print("y =", y)

#14 2.6.1.11
hour = int(input("Starting time (hours): ")) #int requires a number (hour) and input requires user input e.g. 13
mins = int(input("Starting time (minutes): ")) # int requires a number (mins) and input requires user input e.g. 13 e.g. 10
dura = int(input("Event duration (minutes): ")) # int requires a number (dura) and input requires user input e.g. 45

mins = mins + dura # sum of mins + dura e.g 10 + 45 = 55
hour = hour + mins // 60 # floor division to calculate the number of hours hidden in the minutes and update the hour e.g. 13 + (55 // 60) = 13 [55 // 60 = 0.9166]
mins = mins % 60 # modular divion to ensure the minutes fall within the (0..59) range e.g. 55 % 60 = 55
hour = hour % 24 # correct hours to fall in the (0..23) range e.g. 13 % 24 = 13
print(hour, ":", mins, sep='') # 13:55

#3.1.1.4
n = int(input("Enter a number: "))
print(n >= 100)

#3.1.1.10
flower = input("Enter flower name: ")#spathiphyllum - pelargonium - Spathiphyllum

if flower == "Spathiphyllum":#if input is equal to Spathiphyllum it displays "Yes - Spathiphyllum is the best plant ever!"
    print("Yes - Spathiphyllum is the best plant ever!")
elif flower == "spathiphyllum":#if input is equal to spathiphyllum it displays "No, I want a big Spathiphyllum!"
    print("No, I want a big Spathiphyllum!")
else:#if input is anything else it displays "Spathiphyllum! Not", name + "!"
    print("Spathiphyllum! Not", flower + "!")

#3.1.1.11
income = float(input("Enter the annual income: "))#float requests a number [provides a decimal] from user for annual income

if income < 85528:#if income is less than 85528
	tax = income * 0.18 - 556.02#tax equals 18 percent of income minus 556.02 thalers
else:
	tax = (income - 85528) * 0.32 + 14839.02#income equal or greater than 85528, any amount over 85528 is taxed at 32 percent plus 14839.02 thalers

if tax < 0.0:#if tax is equal or less than 0.0, tax will equal 0.0
	tax = 0.0

tax = round(tax, 0)#rounds to 0 decimal place
print("The tax is:", tax, "thalers")

jury = (input("Have you done jury service this year?: "))#string requests text [to answer the question] from user
if jury == "Yes":#if yes, Yes, YES, Y or y - will output the tax is: tax divided by 2 (e.g. 8755.0)
    print("The tax is:", tax / 2)
elif jury == "yes":
    print("The tax is:", tax / 2)
elif jury == "YES":
    print("The tax is:", tax / 2)
elif jury == "Y":
    print("The tax is:", tax / 2)
elif jury == "y":
    print("The tax is:", tax / 2)
else:#For any text other than yes.... - will output the tax is: tax (e.g. 8755.0
    print("The tax is:", tax, "thalers")

#Alternatively
#jury = (input("Have you done jury service this year?: "))#string requests text [to answer the question] from user
#if jury == "Yes" or jury == "yes" or jury == "YES" or jury == "Y" or jury == "y":#if yes, Yes, YES, Y or y - will output the tax is: tax divided by 2 (e.g. #8755.0)
#    print("The tax is:", tax / 2)
#else:#For any text other than yes.... - will output the tax is: tax (e.g. 8755.0
#    print("The tax is:", tax, "thalers")

#3.1.1.11
year = int(input("Enter a year: "))

if year < 1582:#For years not applicable to the leap year rule
	print("Not within the Gregorian calendar period")
else:
	if year % 4 != 0:#If year doesn't divide by 4 display "Common year"
		print("Common year")
	elif year % 100 != 0:#Otherwise if year doesn't divide by 100 display "Leap year"
		print("Leap year")
	elif year % 400 != 0:#Otherwise if year doesn't divide by 400 display "Common year"
		print("Common year")
	else:
		print("Leap year")#Displays "Leap year" for everything else

#3.2.1.2
odd_numbers = 0
even_numbers = 0
divisible_by_3 = 0

# Read the first number.
number = int(input("Enter a number or type 0 to stop: "))

# 0 terminates execution.
while number != 0:
    # Check if the number is odd.
    if number % 2 == 1:
        # Increase the odd_numbers counter.
        odd_numbers += 1
    else:
        # Increase the even_numbers counter.
        even_numbers += 1
    # Read the next number.
    number = int(input("Enter a number or type 0 to stop: "))
    if number % 3 == 0:
        # Increase the divisible_by_3 numbers counter.
        divisible_by_3 += 1

# Print results.
print("Odd numbers count:", odd_numbers)
print("Even numbers count:", even_numbers)
print("Divisble by 3 count:", divisible_by_3)

#3.2.1.3
secret_number = 777

print(
"""
+================================+
| Welcome to my game, muggle!    |
| Enter an integer number        |
| and guess what number I've     |
| picked for you.                |
| So, what is the secret number? |
+================================+
""")

user_number = int(input("Enter the number: "))

while user_number != secret_number:
    print("Ha ha! You're stuck in my loop!")
    if user_number == 7:
        print("Getting closer!")
    user_number = int(input("Enter the number again: "))
print(secret_number, "Well done, muggle! You are free now.")

#3.2.1.6

#3.2.1.10
#1
word = input("Enter a word: ")

##2
user_word = word.upper()
print(user_word)

##3
for letter in user_word:
    if letter == "A":
        continue
    elif letter == "E":
        continue
    elif letter == "I":
        continue
    elif letter == "O":
        continue
    elif letter == "U":
        continue
    else:
        print(letter)

#3.2.1.11
#1
word_without_vowels = ""#A blank string value
user_word = input("Enter a word: ")
user_word = user_word.upper()#Converts inputted word to uppercase

##2
for letter in user_word:
    if letter == "A":#This removes A
        continue#continue is the command to remove/skip letter
    elif letter == "E":
        continue
    elif letter == "I":
        continue
    elif letter == "O":
        continue
    elif letter == "U":
        continue
    else:
        word_without_vowels += letter#Gregory becomes GRGRY because the vowels have been removed + the remaining letters get assigned to the empty string (word_without_vowels)
print(word_without_vowels)

#3.2.1.14 Pyramid Exercise
blocks = int(input("Enter the number of blocks: "))#User inputs the number of blocks

height = 0#Each time the pyramaid gets higher
in_layer = 1#A block is added to each layer
while in_layer <= blocks:#While the layer blocks equals less than the user input blocks
    height += 1#Add 1 to the height
    blocks -= in_layer#And remove 1 (1 = in_layer) block from the user input
    in_layer += 1#Add 1 to the layer

print("The height of the pyramid:", height)


#3.2.1.15 - Hypothesis
c0 = int(input("Enter c0: "))

if c0 > 1:
	steps = 0
	while c0 != 1:
		if c0 %2 != 0:
			cnew = 3 * c0 + 1
		else:
			cnew = c0 // 2
		print(c0)
		c0 = cnew
		steps += 1
	print("steps =",steps)
else:
	print("Bad c0 value")

#3.4.1.13 List - Beatles

# step 1:
Beatles = []
print("Step 1:", Beatles)

# step 2:

Beatles.append("John Lennon")#Appends string to the list
Beatles.append("Paul McCartney")
Beatles.append("George Harrison")
print("Step 2:", Beatles)

# step 3:
for members in range(2):
    Beatles.append(input("New band member: "))
print("Step 3:", Beatles)

# step 4:
del Beatles[-1]#Removes the last item in the Beatles list
del Beatles[-1]
print("Step 4:", Beatles)

# step 5:
Beatles.insert(0, "RingoStarr")#Places RingoStarr as the first entry into the list
print("Step 5:", Beatles)
print("The Fab:",len(Beatles))#Displays The Fab and length in number of the Beatles list

#3.5.1.3 Sorting lists - Bubble




